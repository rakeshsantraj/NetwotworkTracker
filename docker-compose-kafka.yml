version: "3.9"

services:
  # -------------------------
  # Zookeeper
  # -------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - packet_net

  # -------------------------
  # Kafka Brokers
  # -------------------------
  kafka1:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    networks:
      - packet_net

  kafka2:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:19093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19093,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    networks:
      - packet_net

  kafka3:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:19094,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19094,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    networks:
      - packet_net

  # -------------------------
  # PostgreSQL
  # -------------------------
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tiger
      POSTGRES_DB: networkdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - packet_net

  # -------------------------
  # Producer Microservice
  # -------------------------
  packetcaptureproducerservice:
    build: ./packetcaptureproducerservice
    container_name: packetcaptureproducerservice
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      SERVER_PORT: 8781
      KAFKA_BOOTSTRAP_SERVERS: kafka1:19092,kafka2:19093,kafka3:19094
      KAFKA_TOPIC: packets
    ports:
      - "8781:8781"
    networks:
      - packet_net

  # -------------------------
  # Consumer Microservice
  # -------------------------
  packetcaptureconsumerservice:
    build: ./packetcaptureconsumerservice
    container_name: packetcaptureconsumerservice
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgres
    environment:
      SERVER_PORT: 8782
      KAFKA_BOOTSTRAP_SERVERS: kafka1:19092,kafka2:19093,kafka3:19094
      KAFKA_CONSUMER_GROUP: packet-consumer-group
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/networkdata
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: tiger
    ports:
      - "8782:8782"
    networks:
      - packet_net

  # -------------------------
  # Analyzer Microservice
  # -------------------------
  packetanalyserservice:
    build: ./packetanalyserservice
    container_name: packetanalyserservice
    depends_on:
      - postgres
    environment:
      SERVER_PORT: 8783
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/networkdata
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: tiger
    ports:
      - "8783:8783"
    networks:
      - packet_net

  # -------------------------
  # Python Packet Capture Service
  # -------------------------
  networkpacketcaptureservice:
    build: ./networkpacketcaptureservice
    container_name: networkpacketcaptureservice
    depends_on:
      - packetcaptureproducerservice
    environment:
      PRODUCER_URL: http://localhost:8781/produce
    network_mode: host  # Required for scapy to capture host traffic
    cap_add:
      - NET_ADMIN
      - NET_RAW

# -------------------------
# Volumes
# -------------------------
volumes:
  postgres_data:

# -------------------------
# Networks
# -------------------------
networks:
  packet_net:
    external: true
